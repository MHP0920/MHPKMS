class Client:
    """
    HIGH LEVEL API OF MHPKMS CLIENT
    """
    def __init__(self, client: str, appid: str, keys=None, clear=False, exp=1) -> None:
        """
        DESCRIPTION:
        ------------------
        Initialize the API.
        :param client (str): Initialize the client key to authorize later. (required)
        :param keys (str | list): Initialize the list of keys or a single key of app used to authorize later. (Optional, can set later)
        :param appid (str): Initialize the appID used to authorize later. (required)
        :param clear (boolean): If activated, it will clear the screen for the better view each time showing anything. (default False)
        :param exp (int): Set expire time for each session (min: 1; max: 60). (default 1)

        USAGE:
        ------------------
        ```
        API = Client(
            client_key = str, 
            keys = str | list, 
            appid = str, 
            clear = bool,
            exp = int
            )
        ```

        OR

        ```
        API = Client(
            client = str, 
            appid = str
        ) # Required
        API.set_client(str) # DEPRECATED: SEE CHANGELOG 1.0.0.2 FOR MORE INFO
        API.set_keys(str | list)
        API.set_appid(str) # DEPRECATED: SEE CHANGELOG 1.0.0.2 FOR MORE INFO
        API.set_clearmode(bool)
        API.set_exp(int)
        ```
        """ 
    def set_client(self, client_key: str) -> None:
        """***DEPRECATED: SEE CHANGELOG 1.0.0.2 FOR MORE INFO***

        Set client key for Client"""
    def set_keys(self, keys: str) -> None:
        "Set keys for Client"
    def set_appid(self, appid: str) -> None:
        """***DEPRECATED: SEE CHANGELOG 1.0.0.2 FOR MORE INFO***

        Set appid for Client"""
    def set_clearmode(self, mode: bool) -> None:
        "Set clear mode for Client"
    def set_exp(self, exp: int) -> None:
        "Set expire time for each session (in minutes)"
    @property
    def current_session(self) -> str:
        "Return current session ID"
    def ensure_checksum(self):
        """
        DESCRIPTION:
        -
        Ensure that the module is genuine and not being configured by 3rd party.

        We still recommended you to use checksum generated by `OWNER` version of this module.
        
        USAGE:
        -
        ```
        API = Client(...)
        API.ensure_checksum()
        ```
        """
    def clearscreen(self) -> int:
        "Clear current screen if enabled"
    def activate(self) -> bool:
        """
        Activate the key. Used sessions as authenticate method.
        
        If activate failed, it will exit or raise an `Exception` error
        """
    def required(self, func: function) -> None:
        '''
        Description
        -
        Decorator used to ensure function is running with valid session.
        Each session have one minute last long, onetime key included.
        Raise `PermissionError` if session expired without anymore valid keys, and will reactivate if valid keys still exists.
        
        Usage
        -
        ```
        API = Client(...)
        @API.required
        def foo(bar) -> Any:
        ```
        '''
